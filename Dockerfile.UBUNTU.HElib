ARG PlatformRelease
FROM $PlatformRelease
ENV container docker
LABEL maintainer="Flavio Bergamaschi <flavio@uk.ibm.com>"

# Docker Container for Ubuntu HElib Base

USER root

# Setup the toolchain
RUN apt update

# set noninteractive installation
RUN export DEBIAN_FRONTEND=noninteractive

# Update the base OS
RUN DEBIAN_FRONTEND=noninteractive apt update
RUN DEBIAN_FRONTEND=noninteractive apt dist-upgrade -y

# Install tzdata package
RUN DEBIAN_FRONTEND=noninteractive apt install -y tzdata
# Set UTC timezone
RUN ln -fs /usr/share/zoneinfo/UTC /etc/localtime
RUN dpkg-reconfigure --frontend noninteractive tzdata

# Install the compilation toolchain we need...
RUN DEBIAN_FRONTEND=noninteractive apt install -y \
    xz-utils         \
    curl             \
    wget             \
    build-essential  \
    git              \
    cmake            \
    m4               \
    file             \
    patchelf         \
    vim
    
# Install GMP dependency for NTL
RUN DEBIAN_FRONTEND=noninteractive apt install -y libgmp-dev

# Install HDF5 dependency for FHE ML library
RUN DEBIAN_FRONTEND=noninteractive apt install -y libhdf5-dev libhdf5-103

# Cleanup unnecessary and downloaded packages (.deb) during installation
RUN DEBIAN_FRONTEND=noninteractive apt autoremove -y
RUN DEBIAN_FRONTEND=noninteractive apt autoclean -y

# Create dependencies build environment.
RUN mkdir -p /opt/IBM/FHE-distro

# Download, build and install NTL as system library in /usr/local
COPY ./DEPENDENCIES/NTL                /opt/IBM/FHE-distro/NTL
WORKDIR /opt/IBM/FHE-distro/NTL
RUN cd ./src && \
    ./configure SHARED=on NTL_GMP_LIP=on NTL_THREADS=on NTL_THREAD_BOOST=on && \
    make -j4 && \
    make install && \
    ldconfig && \
    cd ../.. && \
    rm -rf NTL

# Download, build and install HElib as system library in /usr/local
COPY ./DEPENDENCIES/HElib              /opt/IBM/FHE-distro/HElib
WORKDIR /opt/IBM/FHE-distro/HElib
RUN  mkdir ./build && \
    cd ./build && \
    cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_SHARED=ON -DENABLE_THREADS=ON .. && \
    make -j4 && \
    make install && \
    ldconfig

# Download, build and install Boost as system library in /usr/local
COPY ./DEPENDENCIES/boost              /opt/IBM/FHE-distro/boost
WORKDIR /opt/IBM/FHE-distro/boost
RUN ./bootstrap.sh --with-libraries=filesystem,system,thread && \
    ./b2 -d0 -j4 install && \
    ldconfig && \
    cd .. && \
    rm -rf boost


# Build and install simple_ml_helib as system library in /usr/local
COPY ./DEPENDENCIES/simple_ml_helib    /opt/IBM/FHE-distro/simple_ml_helib
WORKDIR /opt/IBM/FHE-distro/simple_ml_helib
RUN /bin/bash ./install_system_wide.sh && \
    ldconfig


# Build and install hedge_hebase as system library in /usr/local
COPY ./DEPENDENCIES/hedge              /opt/IBM/FHE-distro/hedge
WORKDIR /opt/IBM/FHE-distro/hedge
RUN ./install_system_wide.sh && \
    ldconfig


# Create user fhe:fhe with no login,
RUN adduser --uid 5000  --gecos "FHE Toolkit User" --disabled-login fhe

WORKDIR /home/fhe
USER fhe
RUN mkdir -p /home/fhe/FHE_Examples
RUN cp -pr /opt/IBM/FHE-distro/HElib/examples/. /home/fhe/FHE_Examples



CMD ["/usr/bin/bash"]
